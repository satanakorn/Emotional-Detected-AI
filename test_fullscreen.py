#!/usr/bin/env python3

import cv2
import numpy as np
import time

def test_fullscreen_display():
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÄ‡∏ï‡πá‡∏°‡∏à‡∏≠"""
    print("üñ•Ô∏è Testing Fullscreen Display")
    print("=" * 40)
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏ó‡∏î‡∏™‡∏≠‡∏ö
    cap = cv2.VideoCapture(0)
    if not cap.isOpened():
        print("‚ùå Cannot open camera")
        return
    
    # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î
    cap.set(cv2.CAP_PROP_FRAME_WIDTH, 640)
    cap.set(cv2.CAP_PROP_FRAME_HEIGHT, 480)
    
    fullscreen_mode = True
    
    print("üì∫ Testing fullscreen display...")
    print("Press 'f' to toggle fullscreen")
    print("Press 'q' to quit")
    
    try:
        while True:
            ret, frame = cap.read()
            if not ret:
                print("‚ùå Cannot read frame")
                break
            
            height, width = frame.shape[:2]
            
            # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏™‡∏µ‡∏î‡∏≥
            overlay = frame.copy()
            overlay_height = max(200, int(height * 0.3))
            cv2.rectangle(overlay, (10, 10), (width-10, overlay_height), (0, 0, 0), -1)
            cv2.addWeighted(overlay, 0.7, frame, 0.3, 0, frame)
            
            # ‡∏Å‡∏£‡∏≠‡∏ö‡∏Ç‡∏≠‡∏ö
            cv2.rectangle(frame, (10, 10), (width-10, overlay_height), (255, 255, 255), 2)
            
            # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≤‡∏°‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠
            font_scale = max(0.8, min(2.0, width / 800))
            font_thickness = max(1, int(width / 400))
            
            # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
            cv2.putText(frame, "Fullscreen Test", (20, 40), 
                       cv2.FONT_HERSHEY_SIMPLEX, font_scale, (0, 255, 0), font_thickness)
            
            cv2.putText(frame, "Score: *****", (20, 70), 
                       cv2.FONT_HERSHEY_SIMPLEX, font_scale * 0.8, (0, 255, 255), font_thickness)
            
            cv2.putText(frame, "Happy", (20, 100), 
                       cv2.FONT_HERSHEY_SIMPLEX, font_scale * 0.8, (255, 255, 0), font_thickness)
            
            cv2.putText(frame, "Confidence: 90.00%", (20, 130), 
                       cv2.FONT_HERSHEY_SIMPLEX, font_scale * 0.8, (0, 255, 255), font_thickness)
            
            # ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ fullscreen
            mode_text = "Fullscreen" if fullscreen_mode else "Window"
            cv2.putText(frame, f"Mode: {mode_text}", (20, 160), 
                       cv2.FONT_HERSHEY_SIMPLEX, font_scale * 0.6, (255, 0, 255), font_thickness)
            
            # ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏•‡∏≤
            time_text = time.strftime("%H:%M:%S")
            time_x = max(width - 200, width - int(width * 0.3))
            cv2.putText(frame, time_text, (time_x, 40), 
                       cv2.FONT_HERSHEY_SIMPLEX, font_scale * 0.8, (255, 255, 0), font_thickness)
            
            # ‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û
            cv2.namedWindow('Fullscreen Test', cv2.WINDOW_NORMAL)
            if fullscreen_mode:
                cv2.setWindowProperty('Fullscreen Test', cv2.WND_PROP_FULLSCREEN, cv2.WINDOW_FULLSCREEN)
            else:
                cv2.setWindowProperty('Fullscreen Test', cv2.WND_PROP_FULLSCREEN, cv2.WINDOW_NORMAL)
            cv2.imshow('Fullscreen Test', frame)
            
            # ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ key input
            key = cv2.waitKey(1) & 0xFF
            if key == ord('q'):
                break
            elif key == ord('f'):
                fullscreen_mode = not fullscreen_mode
                if fullscreen_mode:
                    print("üñ•Ô∏è Switched to fullscreen mode")
                else:
                    print("üñ•Ô∏è Switched to window mode")
    
    except KeyboardInterrupt:
        print("\n‚ö†Ô∏è Interrupted by user")
    
    finally:
        cap.release()
        cv2.destroyAllWindows()
        print("‚úÖ Fullscreen test completed")

def main():
    print("üñ•Ô∏è Fullscreen Display Test")
    print("üéØ Testing fullscreen mode and text scaling")
    print("=" * 50)
    
    print("üìã Expected Results:")
    print("   - Text should scale properly in fullscreen")
    print("   - Score should display as ***** (not ?????)")
    print("   - All text should be readable")
    print("=" * 50)
    
    test_fullscreen_display()

if __name__ == "__main__":
    main()
