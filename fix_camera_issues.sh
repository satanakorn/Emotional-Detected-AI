#!/bin/bash

echo "üîß Camera Issues Fix Script"
echo "=========================="

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏î‡πâ‡∏ß‡∏¢ sudo ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
if [ "$EUID" -ne 0 ]; then
    echo "‚ö†Ô∏è This script needs to be run with sudo"
    echo "Usage: sudo ./fix_camera_issues.sh"
    exit 1
fi

echo "üîç Checking current camera status..."

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö camera status
echo "üì∑ Current camera status:"
vcgencmd get_camera 2>/dev/null || echo "‚ö†Ô∏è Cannot get camera status"

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö video devices
echo "üìπ Video devices:"
ls -la /dev/video* 2>/dev/null || echo "‚ö†Ô∏è No video devices found"

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö USB devices
echo "üîå USB devices:"
lsusb | grep -i camera || echo "‚ö†Ô∏è No USB cameras found"

echo ""
echo "üîß Applying fixes..."

# 1. ‡πÄ‡∏û‡∏¥‡πà‡∏° user ‡πÄ‡∏Ç‡πâ‡∏≤ video group
echo "1. Adding user to video group..."
usermod -a -G video $SUDO_USER
echo "‚úÖ User added to video group"

# 2. ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô camera ‡πÉ‡∏ô config.txt
echo "2. Enabling camera in config.txt..."
if [ -f /boot/config.txt ]; then
    # ‡∏™‡∏≥‡∏£‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏î‡∏¥‡∏°
    cp /boot/config.txt /boot/config.txt.backup
    
    # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏•‡πâ‡∏≠‡∏á
    if ! grep -q "camera_auto_detect=1" /boot/config.txt; then
        echo "camera_auto_detect=1" >> /boot/config.txt
        echo "‚úÖ Added camera_auto_detect=1"
    else
        echo "‚úÖ camera_auto_detect=1 already exists"
    fi
    
    if ! grep -q "start_x=1" /boot/config.txt; then
        echo "start_x=1" >> /boot/config.txt
        echo "‚úÖ Added start_x=1"
    else
        echo "‚úÖ start_x=1 already exists"
    fi
    
    if ! grep -q "gpu_mem=128" /boot/config.txt; then
        echo "gpu_mem=128" >> /boot/config.txt
        echo "‚úÖ Added gpu_mem=128"
    else
        echo "‚úÖ gpu_mem=128 already exists"
    fi
else
    echo "‚ö†Ô∏è /boot/config.txt not found"
fi

# 3. ‡πÇ‡∏´‡∏•‡∏î camera modules
echo "3. Loading camera modules..."
modprobe bcm2835-v4l2 2>/dev/null && echo "‚úÖ bcm2835-v4l2 loaded" || echo "‚ö†Ô∏è bcm2835-v4l2 not available"
modprobe uvcvideo 2>/dev/null && echo "‚úÖ uvcvideo loaded" || echo "‚ö†Ô∏è uvcvideo not available"

# 4. ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ permissions ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö video devices
echo "4. Setting video device permissions..."
for device in /dev/video*; do
    if [ -e "$device" ]; then
        chmod 666 "$device"
        echo "‚úÖ Set permissions for $device"
    fi
done

# 5. ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ USB permissions
echo "5. Setting USB permissions..."
if [ -d /etc/udev/rules.d ]; then
    cat > /etc/udev/rules.d/99-camera.rules << EOF
# Camera permissions
SUBSYSTEM=="video4linux", GROUP="video", MODE="0664"
SUBSYSTEM=="usb", ATTRS{idVendor}=="*", ATTRS{idProduct}=="*", GROUP="video", MODE="0664"
EOF
    echo "‚úÖ Created camera udev rules"
    udevadm control --reload-rules
    udevadm trigger
else
    echo "‚ö†Ô∏è udev rules directory not found"
fi

# 6. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö power supply
echo "6. Checking power supply..."
echo "üìä System status:"
vcgencmd measure_volts 2>/dev/null || echo "‚ö†Ô∏è Cannot measure voltage"
vcgencmd measure_temp 2>/dev/null || echo "‚ö†Ô∏è Cannot measure temperature"
vcgencmd get_throttled 2>/dev/null || echo "‚ö†Ô∏è Cannot check throttling"

echo ""
echo "‚úÖ Fixes applied!"
echo ""
echo "üìã Next steps:"
echo "1. Reboot the system: sudo reboot"
echo "2. After reboot, test camera: python3 test_simple_camera.py"
echo "3. If still not working, check:"
echo "   - Power supply (use official 5V 3A adapter)"
echo "   - USB cable (try different cable)"
echo "   - USB port (try different port)"
echo "   - Camera compatibility"
echo ""
echo "üîç To check if fixes worked:"
echo "   python3 test_power_supply.py"
echo "   python3 diagnose_camera_power.py"
